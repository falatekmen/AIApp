import { Configuration, OpenAIApi } from "openai"


const configuration = new Configuration({
    apiKey: "",
});

const openai = new OpenAIApi(configuration);

export const getCompletion = async (text) => {
    try {
        return await openai.createCompletion({
            model: "text-davinci-003",
            // prompt: "\"\"\"\nUtil exposes the following:\nutil.openai() -> authenticates & returns the openai module, which has the following functions:\nopenai.Completion.create(\n    prompt=\"<my prompt>\", # The prompt to start completing from\n    max_tokens=123, # The max number of tokens to generate\n    temperature=1.0 # A measure of randomness\n    echo=True, # Whether to return the prompt in addition to the generated completion\n)\n\"\"\"\nimport util\n\"\"\"\nCreate an OpenAI completion starting from the prompt \"Once upon an AI\", no more than 5 tokens. Does not include the prompt.\n\"\"\"\n",
            prompt: text,
            // prompt:"Convert movie titles into emoji.\n\nBack to the Future: üë®üë¥üöóüïí \nBatman: ü§µü¶á \nTransformers: üöóü§ñ \nStar Wars:",
            // prompt: "Bunu bana √∂zetle:\nGitHub s√ºrecine bakarsak a√ßƒ±lƒ±≈üƒ±nƒ±n ilk yƒ±lƒ±nda 1002 contributor 124 yeni s√ºr√ºmle 45 branch‚Äôte 7,971 kere commitlemi≈ü. T√ºrk√ße‚Äôsi; 1002 geli≈ütirici 45 versiyonda ki 124 yeni s√ºr√ºm ile 7,971 kere yeni geli≈ütirmeler ger√ßekle≈ütirmi≈ü. Bu verilerin a√ßƒ±klamasƒ± yazƒ±lƒ±m d√ºnyasƒ±na merhaba demi≈ü bir framework i√ßin olduk√ßa iyi bir sonu√ß demek ve arkasƒ±nda ki Facebook desteƒüi ile a√ßƒ±k kaynaklƒ± bir framework olu≈üu sayesinde geli≈ütiricilerin kƒ±sa zamanda sevgisini kazanmasƒ±na sebep olmu≈ü. Ayrƒ±ca performans testlerinde Java ve Objective-C dillerinden de geri kalmadƒ±ƒüƒ±nƒ± g√∂stermi≈ü bu framework. Sonu√ßta biz geli≈ütiriciler i√ßin en √∂nemli noktalardan biri performans ve verimdir.",
            temperature: 0.7,
            max_tokens: 256,
            top_p: 1,
            frequency_penalty: 0,
            presence_penalty: 0,
            stop: ["\"\"\""],
        }).then((response) => {
            // console.log(response.data.choices[0].text.trim())
            return response.data.choices[0].text.trim()
        })

    } catch (error) {
        console.log(error) //XNOTE analyticse bu erroru g√∂nder
        return "Sistemimde bir hata olu≈ütu. ≈ûu an sana yanƒ±t veremiyorum"
    }

}